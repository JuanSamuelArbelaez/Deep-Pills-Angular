{"ast":null,"code":"import { Buffer } from \"buffer\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst TOKEN_KEY = \"AuthToken\";\nexport let TokenService = /*#__PURE__*/(() => {\n  class TokenService {\n    constructor(router) {\n      this.router = router;\n    }\n    setToken(token) {\n      window.sessionStorage.removeItem(TOKEN_KEY);\n      window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n    getToken() {\n      return sessionStorage.getItem(TOKEN_KEY);\n    }\n    isLogged() {\n      if (this.getToken()) {\n        console.log('Logged: ' + true);\n        return true;\n      }\n      console.log('Logged: ' + false);\n      return false;\n    }\n    login(token) {\n      const decoded = this.decodePayload(token);\n      console.log('Token Values: ', decoded);\n      return decoded;\n    }\n    logout() {\n      window.sessionStorage.clear();\n      this.router.navigate([\"/log-in\"]);\n    }\n    decodePayload(token) {\n      console.log('Token value:', token);\n      const payload = token.split(\".\")[1];\n      const payloadDecoded = Buffer.from(payload, 'base64').toString('ascii');\n      const values = JSON.parse(payloadDecoded);\n      return values;\n    }\n    getUserId() {\n      const token = this.getToken();\n      if (token) {\n        const payload = this.decodePayload(token);\n        return payload.id || null; // Devuelve null si payload.id no está definido\n      }\n\n      return null;\n    }\n    static #_ = this.ɵfac = function TokenService_Factory(t) {\n      return new (t || TokenService)(i0.ɵɵinject(i1.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TokenService,\n      factory: TokenService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TokenService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}